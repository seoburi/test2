spring:
  # Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: '295764792663-taqmh56qed9ns176ia6hflt717sh3i12.apps.googleusercontent.com'
          clientSecret: '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'
          scope:
            - email
            - profile
        naver:
          clientId: 'yEQykMr6kwDX2XqlYZYO'
          clientSecret: '8osrqHq8ja'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - name
            - email
            - profile_image
          clientName: Naver
      provider:
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response

  # H2 Setting Info (H2 Console에 접속하기 위한 설정정보 입력)
  h2:
    console:
      enabled: true  # H2 Console을 사용할지 여부 (H2 Console은 H2 Database를 UI로 제공해주는 기능)
      path: /h2-console  # H2 Console의 Path
  # Database Setting Info (Database를 H2로 사용하기 위해 H2연결 정보 입력)
  datasource:
    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
    url: jdbc:h2:mem:testdb  # H2 접속 정보
    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)